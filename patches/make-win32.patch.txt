--- getopt.c	2014-01-25 12:03:26.221379611 +0100
+++ getopt.c	2014-01-25 12:05:50.913901729 +0100
@@ -434,6 +434,9 @@ _getopt_initialize (int argc, char *cons
     }
   else
     nonoption_flags_len = 0;
+#else
+  (void)argc;
+  (void)argv;
 #endif
 
   return optstring;
@@ -677,6 +680,7 @@ _getopt_internal (int argc, char *const
 	      else
 		{
 		  if (opterr)
+      {
 		   if (argv[optind - 1][1] == '-')
 		    /* --option */
 		    fprintf (stderr,
@@ -687,7 +691,8 @@ _getopt_internal (int argc, char *const
 		    fprintf (stderr,
 		     _("%s: option '%c%s' doesn't allow an argument\n"),
 		     argv[0], argv[optind - 1][0], pfound->name);
-
+      }
+        
 		  nextchar += strlen (nextchar);
 
 		  optopt = pfound->val;
--- main.c	2014-01-25 12:03:26.221379611 +0100
+++ main.c	2014-01-25 12:04:21.999336378 +0100
@@ -1105,8 +1105,11 @@ main (int argc, char **argv, char **envp
 
 #endif
 
+/* setlocale interferes with line buffering if using parallel make on MinGW */
+#ifndef __MINGW32__
   /* Set up gettext/internationalization support.  */
   setlocale (LC_ALL, "");
+#endif
   /* The cast to void shuts up compiler warnings on systems that
      disable NLS.  */
   (void)bindtextdomain (PACKAGE, LOCALEDIR);
--- makeint.h	2014-01-25 12:03:26.221379611 +0100
+++ makeint.h	2014-01-25 12:04:21.999336378 +0100
@@ -409,7 +409,7 @@ extern int unixy_shell;
 # define MAP_VMSCOMMA   0x0000
 #endif
 
-#define STOP_SET(_v,_m) ANY_SET (stopchar_map[(int)(_v)],(_m))
+#define STOP_SET(_v,_m) ANY_SET (stopchar_map[(unsigned char)(_v)],(_m))
 
 #if defined(HAVE_SYS_RESOURCE_H) && defined(HAVE_GETRLIMIT) && defined(HAVE_SETRLIMIT)
 # define SET_STACK_SIZE
